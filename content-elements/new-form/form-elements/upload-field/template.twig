{% set formFieldElementId = elementId ?: 'form-field-5674018a' %}
{% set formFieldElementPartId = elementPartId ?: 'form-field-part-c21742af' %}
{% set formFieldHelperTextPartId = formHelperTextPartId ?: 'form-field-helper-text-part-0a34ce3d' %}
{% set formFieldErrorInvalidPartId = errorInvalidPartId ?: 'form-field-part-error-invalid-6ca6d1fd' %}
{% set formFieldLabelText = labelText ?: bsi_cx_lorem(3) %}
{% set formFieldHelperText = infoText ?: "" %}
{% set formFieldErrorInvalidText = errorInvalidText ?: 'Der Wert, den Sie für dieses Feld eingegeben haben, ist ungültig.' %}

<div x-data="fileUpload" data-bsi-element="{{ formFieldElementId }}" class="bsi-element-{{ formFieldElementId }} form-element form-field" data-bsi-element-part="{{ formFieldElementPartId }}" data-bsi-form-field-fixed-type="{{ formFieldInputType }}">
    <label for="file-upload-field" class="form-label">{{ formFieldLabelText }}</label>
    <div 
        class="file-upload-container"
        @dragover.prevent="onDragOver"
        @dragleave.prevent="onDragLeave"
        @drop.prevent="onDrop"
    >
        <div
            class="file-upload-with-error-text"
            :class="\{ 'dragover': isDragOver }"
            x-cloak
        >
            {% block input_field %}
                <input
                    @change="onFileChange(event)" {# TODO: Hier muss vermutlich auch noch die formElementValidationOnChange aus dem form.js aufgerufen werden auf jeden Fall fhelt noch das Error HAndling! #}
                    {# @blur="formElementValidationOnBlur" #}
                    id="file-upload-field"
                    type="file"
                    x-ref="fileInput"
                    class="native-file-upload-input hidden"
                >
                </input>

                <div class="left">
                    <button
                        type="button"
                        class="upload-button"
                        @click="triggerFileUpload"
                        :class="\{ 'hidden': files.length > 0 }"
                        aria-label="Datei auswählen"
                    >
                        <span>Datei auswählen</span> {# TODO: muss noch übersetzt werden #}
                        <i class="icon-upload"></i>
                    </button>
                    <div
                        class="file-info"
                        aria-live="polite"
                        :class="\{ 'hidden': files.length === 0 }"
                    >
                        <span class="file-name" x-text="files.length > 0 ? files\[0].name : ''"></span>
                        <img 
                            class="preview-image"
                            :class="\{ 'hidden': files.length === 0 }"
                            :src="files.length > 0 ? files\[0].preview: ''"
                            :alt="files.length > 0 ? files\[0].name : ''"
                        />
                    </div>
                </div>

                <div class="right">
                    <span
                        class="drop-text"
                        aria-hidden="true"
                        :class="\{ 'hidden': files.length > 0 }"
                    > oder hier ablegen </span> {# TODO: muss noch übersetzt werden #}

                    <button
                        type="button"
                        class="remove-button"
                        aria-label="Datei entfernen"
                        @click="removeFile(event)"
                        :class="\{ 'hidden': files.length === 0 }"
                    >
                        <i class="icon-delete"></i>
                    </button>
                </div>

            {% endblock %}
        </div>
    </div>

    {% block input_field_error_text %}
        <div data-bsi-element-part="{{ formFieldErrorInvalidPartId }}" class="bsi-invalid-feedback">
            {{ formFieldErrorInvalidText }}
        </div>
    {% endblock %}
    
    <div class="helper-text-container">
        <div data-bsi-element-part="{{ formFieldHelperTextPartId }}" class="helper-text">{{ formFieldHelperText }}</div>
    </div>
    
</div>
